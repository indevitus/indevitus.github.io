---
export function getStaticPaths() {
  return [
    { params: { career: 'senior-frontend' } },
    { params: { career: 'medior-frontend' } },
    { params: { career: 'web-design' } },
    { params: { career: 'intern-frontend' } },
  ];
}

import HiringLayout from '../../layouts/HiringLayout.astro';
import { JOB_DESCRIPTION } from '../../data';
import Button from "../../components/Button.astro";
import Form from "../../components/Form.astro";
import Modal from "../../components/Modal.astro";

const { career } = Astro.params;

const job = JOB_DESCRIPTION.find((el) => el.id === career);

const iconDisplay: { [key: string]: string } = {
  location: '/location-icon-black.png',
  job_type: '/briefcase.svg',
  date_posted: '/calendar.svg',
  experience: '/experience.svg',
  working_hours: '/clock.svg',
  working_days: '/days.svg',
  vacancy: '/vacancy.svg',
};

const formatKey = (text: string) => {
  return text.replace(/_/g, ' ');
};
---

<HiringLayout>
  <main class="dark:text-white">
    <div>
      <section
        class="careers--hero flex justify-center items-center py-[10rem] lg:py-[16rem] bg-cover bg-top bg-no-repeat lg:mb-24"
      >
        <div class="container">
          <div class="text-center flex items-center flex-col text-white">
            <h1 class="font-bold text-4xl lg:text-8xl mb-12">{job?.title}</h1>
            <span class="text-lg mb-6">{job?.type}</span>
            <Button primary link="#" title="careers-apply">Apply now</Button>
          </div>
        </div>
      </section>

      <section class="container">
        <div class="flex flex-col lg:grid lg:grid-cols-12 lg:gap-8">
          <div class="mb-8 lg:col-span-8 order-2 lg:order-1">
            <h2 class="uppercase font-bold text-3xl lg:text-5xl mb-8">
              {job?.title}
            </h2>
            {
              job?.description.map((element) => {
                return (
                  <>
                    <p class="text-2xl lg:text-3xl mb-5">{element?.title}</p>
                    <ul class="mb-4">
                      {element.content.map((content) => {
                        return <li>{content?.text}</li>;
                      })}
                    </ul>
                  </>
                );
              })
            }
          </div>

          <div class="lg:col-span-4 order-1 lg:order-2">
            <div
              class="grid grid-cols-12 gap-4 justify-between lg:block py-12 lg:px-8 lg:sticky lg:top-0 flex-wrap"
            >
            <div class="hidden lg:block">
              <Button link="#" primary title="carreers-apply">Apply now</Button>
            </div>
              {
                Object.entries(job?.summary ?? {}).map(([key, value]) => {
                  return (
                    <div class="flex items-center col-span-6 md:col-span-3 lg:mt-12">
                      <img
                        loading="lazy"
                        class="icon-blend w-[30px] h-[30px]"
                        src={iconDisplay[key]}
                        alt={key}
                        width="30"
                      />
                      <div class="ml-4">
                        <p class="text-gray-darker dark:text-gray-default mb-1 capitalize">
                          {formatKey(key)}
                        </p>
                        <p>{value}</p>
                      </div>
                    </div>
                  );
                })
              }
            </div>
          </div>
        </div>
      </section>

      <Modal title="form">
        <Form position={job?.title} />
      </Modal>
    </div>
  </main>
</HiringLayout>

<script>
  const button = document.querySelector('#button-careers-apply');
  const modalForm = document.getElementById('modal-form') as HTMLDialogElement

  button?.addEventListener('click', () => {
    modalForm?.showModal();
  })
</script>
