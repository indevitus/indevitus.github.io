---
import Button from "./Button.astro";
import sgMail from '@sendgrid/mail'

const { position } = Astro.props;
const method = Astro.request.method;

sgMail.setApiKey(import.meta.env.SENDGRID_API_KEY)

if(method === 'POST'){
  try{
    const data = await Astro.request.formData();

    const msg = {
      to: 'omerinovic27@gmail.com',
      from: 'husan.omerinovic@indevitus.com', // Change to your verified sender
      subject: 'Sending with SendGrid is Fun',
      text: 'Hello world',
      html: '<strong>HELLO WORLD</strong>',
    }
    console.log(msg)

    await sgMail.send(msg).then(() => {
      console.log('Email sent')
    }).catch((error) => {
      console.error(error)
    })
  } catch(error) {
    console.error(error);
  }
}
---

<p class="text-center mt-3 mb-10 text-4xl text-bold">Apply for position {position}</p>

<form method="POST" class="max-w-md mx-auto" enctype="multipart/form-data" data-position={position} data-method={method}>
  <div class="relative z-0 w-full mb-[1.625rem] group">
      <input type="email" name="email" id="email" class="block py-2 autofill:mt-4 px-0 w-full text-sm text-gray-darkest bg-transparent border-0 border-b-2 border-gray-light appearance-none dark:border-gray-dark dark:focus:border-primary focus:outline-none focus:ring-0 focus:border-primary peer" placeholder=" " required />
      <label for="email" class="peer-focus:font-medium absolute text-sm text-gray-medium dark:text-gray-default duration-300 transform -translate-y-6 scale-75 top-2 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Email address</label>
  </div>
  <div class="grid md:grid-cols-2 md:gap-6">
    <div class="relative z-0 w-full mb-[1.625rem] group">
        <input type="text" name="first_name" id="first_name" class="block py-2 px-0 w-full text-sm text-gray-darkest bg-transparent border-0 border-b-2 border-gray-light appearance-none dark:border-gray-dark dark:focus:border-primary focus:outline-none focus:ring-0 focus:border-primary peer" placeholder=" " required />
        <label for="first_name" class="peer-focus:font-medium absolute text-sm text-gray-medium dark:text-gray-default duration-300 transform -translate-y-6 scale-75 top-2 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">First name</label>
    </div>
    <div class="relative z-0 w-full mb-[1.625rem] group">
        <input type="text" name="last_name" id="last_name" class="block py-2 px-0 w-full text-sm text-gray-darkest bg-transparent border-0 border-b-2 border-gray-light appearance-none dark:border-gray-dark dark:focus:border-primary focus:outline-none focus:ring-0 focus:border-primary peer" placeholder=" " required />
        <label for="last_name" class="peer-focus:font-medium absolute text-sm text-gray-medium dark:text-gray-default duration-300 transform -translate-y-6 scale-75 top-2 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Last name</label>
    </div>
  </div>
  <div class="relative z-0 w-full mb-1.5 group">
      <input type="tel" maxlength="15" name="phone" id="phone" class="block py-2 px-0 w-full text-sm text-gray-darkest bg-transparent border-0 border-b-2 border-gray-light appearance-none dark:border-gray-dark dark:focus:border-primary focus:outline-none focus:ring-0 focus:border-primary peer" placeholder=" " required />
      <label for="phone" class="peer-focus:font-medium absolute text-sm whitespace-nowrap text-gray-medium dark:text-gray-default duration-300 transform -translate-y-6 scale-75 top-2 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Phone number</label>
      <span id="phoneError" class="text-xs text-maximum-red opacity-0 transition-opacity duration-300 ease-in-out">Please enter only digits up to 15 characters.</span>
  </div>
  <div class="relative z-0 w-full mb-[1.625rem] group">
    <label for="user_portfolio" class="block mb-2 text-sm  text-gray-darker dark:text-gray-default" >Upload portfolio</label>
    <input type="file" class="file-input block w-full text-sm text-gray-darker border border-graylight rounded-lg cursor-pointer bg-gray-lighter focus:outline-none dark:placeholder-gray-400" aria-describedby="user_portfolio_help" id="user_portfolio" accept="application/pdf, application/vnd.ms-excel" required />
    <span id="file-error" class="text-xs text-maximum-red opacity-0 transition-opacity duration-300 ease-in-out">File size exceeds the maximum limit of 5 MB.</span>
  </div>
  <Button btnType="submit" title="form" primary backgroundColor>Submit</Button>
</form>

<script>
  const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5 MB

  const form = document.querySelector('form');
  const buttonForm = document.getElementById('button-form');
  const position = form?.getAttribute('data-position');
  const method = form?.getAttribute('data-method');

  const userPortfolio = (document.getElementById('user_portfolio') as HTMLInputElement);
  const email = (document.getElementById('email') as HTMLInputElement);
  const firstName = (document.getElementById('first_name') as HTMLInputElement);
  const lastName = (document.getElementById('last_name') as HTMLInputElement);
  const phone = (document.getElementById('phone') as HTMLInputElement);
  const fileError = document.getElementById('file-error');
  const phoneError = document.getElementById('phoneError');

  if(method === 'POST'){
    window.location.href = '/info'
  }

  const isValidInput = (value: string) => /^\d{0,15}$/.test(value);
  buttonForm?.classList.add('cursor-pointer')

  form?.addEventListener('submit', (event) => {
    const userFile = userPortfolio?.files?.[0];

    phoneError?.classList.toggle('!opacity-100', !isValidInput(phone.value));
    fileError?.classList.toggle('!opacity-100', userFile && userFile.size > MAX_FILE_SIZE);

    if(userFile && userFile?.size < MAX_FILE_SIZE && isValidInput(phone.value)){
    }
  })
</script>

<style>
  .file-input::file-selector-button {
    @apply bg-primary border-none p-2.5 mr-6 text-white hover:bg-primary/70 transition-all duration-300 ease-in-out;
  }
</style>
